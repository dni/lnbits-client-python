# coding: utf-8

"""
    lnbits

    API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.  # noqa: E501

    The version of the OpenAPI document: 0.10.9
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class CreateInvoiceData(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            out = schemas.BoolSchema
            
            
            class amount(
                schemas.NumberSchema
            ):
                pass
            memo = schemas.StrSchema
            unit = schemas.StrSchema
            description_hash = schemas.StrSchema
            unhashed_description = schemas.StrSchema
            expiry = schemas.IntSchema
            lnurl_callback = schemas.StrSchema
            lnurl_balance_check = schemas.StrSchema
            extra = schemas.DictSchema
            webhook = schemas.StrSchema
            internal = schemas.BoolSchema
            bolt11 = schemas.StrSchema
            __annotations__ = {
                "out": out,
                "amount": amount,
                "memo": memo,
                "unit": unit,
                "description_hash": description_hash,
                "unhashed_description": unhashed_description,
                "expiry": expiry,
                "lnurl_callback": lnurl_callback,
                "lnurl_balance_check": lnurl_balance_check,
                "extra": extra,
                "webhook": webhook,
                "internal": internal,
                "bolt11": bolt11,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["out"]) -> MetaOapg.properties.out: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount"]) -> MetaOapg.properties.amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["memo"]) -> MetaOapg.properties.memo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unit"]) -> MetaOapg.properties.unit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description_hash"]) -> MetaOapg.properties.description_hash: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unhashed_description"]) -> MetaOapg.properties.unhashed_description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["expiry"]) -> MetaOapg.properties.expiry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnurl_callback"]) -> MetaOapg.properties.lnurl_callback: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnurl_balance_check"]) -> MetaOapg.properties.lnurl_balance_check: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["extra"]) -> MetaOapg.properties.extra: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["webhook"]) -> MetaOapg.properties.webhook: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["internal"]) -> MetaOapg.properties.internal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["bolt11"]) -> MetaOapg.properties.bolt11: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["out", "amount", "memo", "unit", "description_hash", "unhashed_description", "expiry", "lnurl_callback", "lnurl_balance_check", "extra", "webhook", "internal", "bolt11", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["out"]) -> typing.Union[MetaOapg.properties.out, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount"]) -> typing.Union[MetaOapg.properties.amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["memo"]) -> typing.Union[MetaOapg.properties.memo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unit"]) -> typing.Union[MetaOapg.properties.unit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description_hash"]) -> typing.Union[MetaOapg.properties.description_hash, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unhashed_description"]) -> typing.Union[MetaOapg.properties.unhashed_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["expiry"]) -> typing.Union[MetaOapg.properties.expiry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnurl_callback"]) -> typing.Union[MetaOapg.properties.lnurl_callback, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnurl_balance_check"]) -> typing.Union[MetaOapg.properties.lnurl_balance_check, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["extra"]) -> typing.Union[MetaOapg.properties.extra, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["webhook"]) -> typing.Union[MetaOapg.properties.webhook, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["internal"]) -> typing.Union[MetaOapg.properties.internal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["bolt11"]) -> typing.Union[MetaOapg.properties.bolt11, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["out", "amount", "memo", "unit", "description_hash", "unhashed_description", "expiry", "lnurl_callback", "lnurl_balance_check", "extra", "webhook", "internal", "bolt11", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        out: typing.Union[MetaOapg.properties.out, bool, schemas.Unset] = schemas.unset,
        amount: typing.Union[MetaOapg.properties.amount, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        memo: typing.Union[MetaOapg.properties.memo, str, schemas.Unset] = schemas.unset,
        unit: typing.Union[MetaOapg.properties.unit, str, schemas.Unset] = schemas.unset,
        description_hash: typing.Union[MetaOapg.properties.description_hash, str, schemas.Unset] = schemas.unset,
        unhashed_description: typing.Union[MetaOapg.properties.unhashed_description, str, schemas.Unset] = schemas.unset,
        expiry: typing.Union[MetaOapg.properties.expiry, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnurl_callback: typing.Union[MetaOapg.properties.lnurl_callback, str, schemas.Unset] = schemas.unset,
        lnurl_balance_check: typing.Union[MetaOapg.properties.lnurl_balance_check, str, schemas.Unset] = schemas.unset,
        extra: typing.Union[MetaOapg.properties.extra, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        webhook: typing.Union[MetaOapg.properties.webhook, str, schemas.Unset] = schemas.unset,
        internal: typing.Union[MetaOapg.properties.internal, bool, schemas.Unset] = schemas.unset,
        bolt11: typing.Union[MetaOapg.properties.bolt11, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateInvoiceData':
        return super().__new__(
            cls,
            *_args,
            out=out,
            amount=amount,
            memo=memo,
            unit=unit,
            description_hash=description_hash,
            unhashed_description=unhashed_description,
            expiry=expiry,
            lnurl_callback=lnurl_callback,
            lnurl_balance_check=lnurl_balance_check,
            extra=extra,
            webhook=webhook,
            internal=internal,
            bolt11=bolt11,
            _configuration=_configuration,
            **kwargs,
        )
