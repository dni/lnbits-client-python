# coding: utf-8

"""
    lnbits

    API for LNbits, the free and open source bitcoin wallet and accounts system with plugins.  # noqa: E501

    The version of the OpenAPI document: 0.10.9
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class EditableSettings(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    Base class for settings, allowing values to be overridden by environment variables.

This is useful in production for secrets you do not wish to save in code, it plays nicely with docker(-compose),
Heroku and any 12 factor app design.
    """


    class MetaOapg:
        
        class properties:
            lightning_invoice_expiry = schemas.IntSchema
            boltz_network = schemas.StrSchema
            boltz_url = schemas.StrSchema
            boltz_mempool_space_url = schemas.StrSchema
            boltz_mempool_space_url_ws = schemas.StrSchema
            lntips_api_endpoint = schemas.StrSchema
            lntips_api_key = schemas.StrSchema
            lntips_admin_key = schemas.StrSchema
            lntips_invoice_key = schemas.StrSchema
            spark_url = schemas.StrSchema
            spark_token = schemas.StrSchema
            opennode_api_endpoint = schemas.StrSchema
            opennode_key = schemas.StrSchema
            opennode_admin_key = schemas.StrSchema
            opennode_invoice_key = schemas.StrSchema
            lnpay_api_endpoint = schemas.StrSchema
            lnpay_api_key = schemas.StrSchema
            lnpay_wallet_key = schemas.StrSchema
            lnpay_admin_key = schemas.StrSchema
            lnd_grpc_endpoint = schemas.StrSchema
            lnd_grpc_cert = schemas.StrSchema
            lnd_grpc_port = schemas.IntSchema
            lnd_grpc_admin_macaroon = schemas.StrSchema
            lnd_grpc_invoice_macaroon = schemas.StrSchema
            lnd_grpc_macaroon = schemas.StrSchema
            lnd_grpc_macaroon_encrypted = schemas.StrSchema
            lnd_rest_endpoint = schemas.StrSchema
            lnd_rest_cert = schemas.StrSchema
            lnd_rest_macaroon = schemas.StrSchema
            lnd_rest_macaroon_encrypted = schemas.StrSchema
            lnd_cert = schemas.StrSchema
            lnd_admin_macaroon = schemas.StrSchema
            lnd_invoice_macaroon = schemas.StrSchema
            lnd_rest_admin_macaroon = schemas.StrSchema
            lnd_rest_invoice_macaroon = schemas.StrSchema
            eclair_url = schemas.StrSchema
            eclair_pass = schemas.StrSchema
            corelightning_rpc = schemas.StrSchema
            clightning_rpc = schemas.StrSchema
            cliche_endpoint = schemas.StrSchema
            lnbits_endpoint = schemas.StrSchema
            lnbits_key = schemas.StrSchema
            lnbits_admin_key = schemas.StrSchema
            lnbits_invoice_key = schemas.StrSchema
            fake_wallet_secret = schemas.StrSchema
            lnbits_backend_wallet_class = schemas.StrSchema
            lnbits_rate_limit_no = schemas.StrSchema
            lnbits_rate_limit_unit = schemas.StrSchema
            
            
            class lnbits_allowed_ips(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_allowed_ips':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class lnbits_blocked_ips(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_blocked_ips':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            lnbits_notifications = schemas.BoolSchema
            lnbits_killswitch = schemas.BoolSchema
            lnbits_killswitch_interval = schemas.IntSchema
            lnbits_watchdog = schemas.BoolSchema
            lnbits_watchdog_interval = schemas.IntSchema
            lnbits_watchdog_delta = schemas.IntSchema
            lnbits_status_manifest = schemas.StrSchema
            lnbits_baseurl = schemas.StrSchema
            lnbits_reserve_fee_min = schemas.IntSchema
            lnbits_reserve_fee_percent = schemas.NumberSchema
            lnbits_service_fee = schemas.NumberSchema
            lnbits_hide_api = schemas.BoolSchema
            lnbits_denomination = schemas.StrSchema
            lnbits_site_title = schemas.StrSchema
            lnbits_site_tagline = schemas.StrSchema
            lnbits_site_description = schemas.StrSchema
            lnbits_default_wallet_name = schemas.StrSchema
            
            
            class lnbits_theme_options(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_theme_options':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            lnbits_custom_logo = schemas.StrSchema
            lnbits_ad_space_title = schemas.StrSchema
            lnbits_ad_space = schemas.StrSchema
            lnbits_ad_space_enabled = schemas.BoolSchema
            
            
            class lnbits_allowed_currencies(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_allowed_currencies':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class lnbits_admin_extensions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_admin_extensions':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class lnbits_extensions_manifests(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_extensions_manifests':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class lnbits_admin_users(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_admin_users':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            
            
            class lnbits_allowed_users(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    items = schemas.StrSchema
            
                def __new__(
                    cls,
                    _arg: typing.Union[typing.Tuple[typing.Union[MetaOapg.items, str, ]], typing.List[typing.Union[MetaOapg.items, str, ]]],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'lnbits_allowed_users':
                    return super().__new__(
                        cls,
                        _arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> MetaOapg.items:
                    return super().__getitem__(i)
            __annotations__ = {
                "lightning_invoice_expiry": lightning_invoice_expiry,
                "boltz_network": boltz_network,
                "boltz_url": boltz_url,
                "boltz_mempool_space_url": boltz_mempool_space_url,
                "boltz_mempool_space_url_ws": boltz_mempool_space_url_ws,
                "lntips_api_endpoint": lntips_api_endpoint,
                "lntips_api_key": lntips_api_key,
                "lntips_admin_key": lntips_admin_key,
                "lntips_invoice_key": lntips_invoice_key,
                "spark_url": spark_url,
                "spark_token": spark_token,
                "opennode_api_endpoint": opennode_api_endpoint,
                "opennode_key": opennode_key,
                "opennode_admin_key": opennode_admin_key,
                "opennode_invoice_key": opennode_invoice_key,
                "lnpay_api_endpoint": lnpay_api_endpoint,
                "lnpay_api_key": lnpay_api_key,
                "lnpay_wallet_key": lnpay_wallet_key,
                "lnpay_admin_key": lnpay_admin_key,
                "lnd_grpc_endpoint": lnd_grpc_endpoint,
                "lnd_grpc_cert": lnd_grpc_cert,
                "lnd_grpc_port": lnd_grpc_port,
                "lnd_grpc_admin_macaroon": lnd_grpc_admin_macaroon,
                "lnd_grpc_invoice_macaroon": lnd_grpc_invoice_macaroon,
                "lnd_grpc_macaroon": lnd_grpc_macaroon,
                "lnd_grpc_macaroon_encrypted": lnd_grpc_macaroon_encrypted,
                "lnd_rest_endpoint": lnd_rest_endpoint,
                "lnd_rest_cert": lnd_rest_cert,
                "lnd_rest_macaroon": lnd_rest_macaroon,
                "lnd_rest_macaroon_encrypted": lnd_rest_macaroon_encrypted,
                "lnd_cert": lnd_cert,
                "lnd_admin_macaroon": lnd_admin_macaroon,
                "lnd_invoice_macaroon": lnd_invoice_macaroon,
                "lnd_rest_admin_macaroon": lnd_rest_admin_macaroon,
                "lnd_rest_invoice_macaroon": lnd_rest_invoice_macaroon,
                "eclair_url": eclair_url,
                "eclair_pass": eclair_pass,
                "corelightning_rpc": corelightning_rpc,
                "clightning_rpc": clightning_rpc,
                "cliche_endpoint": cliche_endpoint,
                "lnbits_endpoint": lnbits_endpoint,
                "lnbits_key": lnbits_key,
                "lnbits_admin_key": lnbits_admin_key,
                "lnbits_invoice_key": lnbits_invoice_key,
                "fake_wallet_secret": fake_wallet_secret,
                "lnbits_backend_wallet_class": lnbits_backend_wallet_class,
                "lnbits_rate_limit_no": lnbits_rate_limit_no,
                "lnbits_rate_limit_unit": lnbits_rate_limit_unit,
                "lnbits_allowed_ips": lnbits_allowed_ips,
                "lnbits_blocked_ips": lnbits_blocked_ips,
                "lnbits_notifications": lnbits_notifications,
                "lnbits_killswitch": lnbits_killswitch,
                "lnbits_killswitch_interval": lnbits_killswitch_interval,
                "lnbits_watchdog": lnbits_watchdog,
                "lnbits_watchdog_interval": lnbits_watchdog_interval,
                "lnbits_watchdog_delta": lnbits_watchdog_delta,
                "lnbits_status_manifest": lnbits_status_manifest,
                "lnbits_baseurl": lnbits_baseurl,
                "lnbits_reserve_fee_min": lnbits_reserve_fee_min,
                "lnbits_reserve_fee_percent": lnbits_reserve_fee_percent,
                "lnbits_service_fee": lnbits_service_fee,
                "lnbits_hide_api": lnbits_hide_api,
                "lnbits_denomination": lnbits_denomination,
                "lnbits_site_title": lnbits_site_title,
                "lnbits_site_tagline": lnbits_site_tagline,
                "lnbits_site_description": lnbits_site_description,
                "lnbits_default_wallet_name": lnbits_default_wallet_name,
                "lnbits_theme_options": lnbits_theme_options,
                "lnbits_custom_logo": lnbits_custom_logo,
                "lnbits_ad_space_title": lnbits_ad_space_title,
                "lnbits_ad_space": lnbits_ad_space,
                "lnbits_ad_space_enabled": lnbits_ad_space_enabled,
                "lnbits_allowed_currencies": lnbits_allowed_currencies,
                "lnbits_admin_extensions": lnbits_admin_extensions,
                "lnbits_extensions_manifests": lnbits_extensions_manifests,
                "lnbits_admin_users": lnbits_admin_users,
                "lnbits_allowed_users": lnbits_allowed_users,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lightning_invoice_expiry"]) -> MetaOapg.properties.lightning_invoice_expiry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boltz_network"]) -> MetaOapg.properties.boltz_network: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boltz_url"]) -> MetaOapg.properties.boltz_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boltz_mempool_space_url"]) -> MetaOapg.properties.boltz_mempool_space_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["boltz_mempool_space_url_ws"]) -> MetaOapg.properties.boltz_mempool_space_url_ws: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lntips_api_endpoint"]) -> MetaOapg.properties.lntips_api_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lntips_api_key"]) -> MetaOapg.properties.lntips_api_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lntips_admin_key"]) -> MetaOapg.properties.lntips_admin_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lntips_invoice_key"]) -> MetaOapg.properties.lntips_invoice_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["spark_url"]) -> MetaOapg.properties.spark_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["spark_token"]) -> MetaOapg.properties.spark_token: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opennode_api_endpoint"]) -> MetaOapg.properties.opennode_api_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opennode_key"]) -> MetaOapg.properties.opennode_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opennode_admin_key"]) -> MetaOapg.properties.opennode_admin_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["opennode_invoice_key"]) -> MetaOapg.properties.opennode_invoice_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnpay_api_endpoint"]) -> MetaOapg.properties.lnpay_api_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnpay_api_key"]) -> MetaOapg.properties.lnpay_api_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnpay_wallet_key"]) -> MetaOapg.properties.lnpay_wallet_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnpay_admin_key"]) -> MetaOapg.properties.lnpay_admin_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_endpoint"]) -> MetaOapg.properties.lnd_grpc_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_cert"]) -> MetaOapg.properties.lnd_grpc_cert: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_port"]) -> MetaOapg.properties.lnd_grpc_port: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_admin_macaroon"]) -> MetaOapg.properties.lnd_grpc_admin_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_invoice_macaroon"]) -> MetaOapg.properties.lnd_grpc_invoice_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_macaroon"]) -> MetaOapg.properties.lnd_grpc_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_grpc_macaroon_encrypted"]) -> MetaOapg.properties.lnd_grpc_macaroon_encrypted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_endpoint"]) -> MetaOapg.properties.lnd_rest_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_cert"]) -> MetaOapg.properties.lnd_rest_cert: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_macaroon"]) -> MetaOapg.properties.lnd_rest_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_macaroon_encrypted"]) -> MetaOapg.properties.lnd_rest_macaroon_encrypted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_cert"]) -> MetaOapg.properties.lnd_cert: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_admin_macaroon"]) -> MetaOapg.properties.lnd_admin_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_invoice_macaroon"]) -> MetaOapg.properties.lnd_invoice_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_admin_macaroon"]) -> MetaOapg.properties.lnd_rest_admin_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnd_rest_invoice_macaroon"]) -> MetaOapg.properties.lnd_rest_invoice_macaroon: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eclair_url"]) -> MetaOapg.properties.eclair_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eclair_pass"]) -> MetaOapg.properties.eclair_pass: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["corelightning_rpc"]) -> MetaOapg.properties.corelightning_rpc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["clightning_rpc"]) -> MetaOapg.properties.clightning_rpc: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cliche_endpoint"]) -> MetaOapg.properties.cliche_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_endpoint"]) -> MetaOapg.properties.lnbits_endpoint: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_key"]) -> MetaOapg.properties.lnbits_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_admin_key"]) -> MetaOapg.properties.lnbits_admin_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_invoice_key"]) -> MetaOapg.properties.lnbits_invoice_key: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fake_wallet_secret"]) -> MetaOapg.properties.fake_wallet_secret: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_backend_wallet_class"]) -> MetaOapg.properties.lnbits_backend_wallet_class: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_rate_limit_no"]) -> MetaOapg.properties.lnbits_rate_limit_no: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_rate_limit_unit"]) -> MetaOapg.properties.lnbits_rate_limit_unit: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_allowed_ips"]) -> MetaOapg.properties.lnbits_allowed_ips: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_blocked_ips"]) -> MetaOapg.properties.lnbits_blocked_ips: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_notifications"]) -> MetaOapg.properties.lnbits_notifications: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_killswitch"]) -> MetaOapg.properties.lnbits_killswitch: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_killswitch_interval"]) -> MetaOapg.properties.lnbits_killswitch_interval: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_watchdog"]) -> MetaOapg.properties.lnbits_watchdog: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_watchdog_interval"]) -> MetaOapg.properties.lnbits_watchdog_interval: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_watchdog_delta"]) -> MetaOapg.properties.lnbits_watchdog_delta: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_status_manifest"]) -> MetaOapg.properties.lnbits_status_manifest: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_baseurl"]) -> MetaOapg.properties.lnbits_baseurl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_reserve_fee_min"]) -> MetaOapg.properties.lnbits_reserve_fee_min: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_reserve_fee_percent"]) -> MetaOapg.properties.lnbits_reserve_fee_percent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_service_fee"]) -> MetaOapg.properties.lnbits_service_fee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_hide_api"]) -> MetaOapg.properties.lnbits_hide_api: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_denomination"]) -> MetaOapg.properties.lnbits_denomination: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_site_title"]) -> MetaOapg.properties.lnbits_site_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_site_tagline"]) -> MetaOapg.properties.lnbits_site_tagline: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_site_description"]) -> MetaOapg.properties.lnbits_site_description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_default_wallet_name"]) -> MetaOapg.properties.lnbits_default_wallet_name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_theme_options"]) -> MetaOapg.properties.lnbits_theme_options: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_custom_logo"]) -> MetaOapg.properties.lnbits_custom_logo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_ad_space_title"]) -> MetaOapg.properties.lnbits_ad_space_title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_ad_space"]) -> MetaOapg.properties.lnbits_ad_space: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_ad_space_enabled"]) -> MetaOapg.properties.lnbits_ad_space_enabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_allowed_currencies"]) -> MetaOapg.properties.lnbits_allowed_currencies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_admin_extensions"]) -> MetaOapg.properties.lnbits_admin_extensions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_extensions_manifests"]) -> MetaOapg.properties.lnbits_extensions_manifests: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_admin_users"]) -> MetaOapg.properties.lnbits_admin_users: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lnbits_allowed_users"]) -> MetaOapg.properties.lnbits_allowed_users: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["lightning_invoice_expiry", "boltz_network", "boltz_url", "boltz_mempool_space_url", "boltz_mempool_space_url_ws", "lntips_api_endpoint", "lntips_api_key", "lntips_admin_key", "lntips_invoice_key", "spark_url", "spark_token", "opennode_api_endpoint", "opennode_key", "opennode_admin_key", "opennode_invoice_key", "lnpay_api_endpoint", "lnpay_api_key", "lnpay_wallet_key", "lnpay_admin_key", "lnd_grpc_endpoint", "lnd_grpc_cert", "lnd_grpc_port", "lnd_grpc_admin_macaroon", "lnd_grpc_invoice_macaroon", "lnd_grpc_macaroon", "lnd_grpc_macaroon_encrypted", "lnd_rest_endpoint", "lnd_rest_cert", "lnd_rest_macaroon", "lnd_rest_macaroon_encrypted", "lnd_cert", "lnd_admin_macaroon", "lnd_invoice_macaroon", "lnd_rest_admin_macaroon", "lnd_rest_invoice_macaroon", "eclair_url", "eclair_pass", "corelightning_rpc", "clightning_rpc", "cliche_endpoint", "lnbits_endpoint", "lnbits_key", "lnbits_admin_key", "lnbits_invoice_key", "fake_wallet_secret", "lnbits_backend_wallet_class", "lnbits_rate_limit_no", "lnbits_rate_limit_unit", "lnbits_allowed_ips", "lnbits_blocked_ips", "lnbits_notifications", "lnbits_killswitch", "lnbits_killswitch_interval", "lnbits_watchdog", "lnbits_watchdog_interval", "lnbits_watchdog_delta", "lnbits_status_manifest", "lnbits_baseurl", "lnbits_reserve_fee_min", "lnbits_reserve_fee_percent", "lnbits_service_fee", "lnbits_hide_api", "lnbits_denomination", "lnbits_site_title", "lnbits_site_tagline", "lnbits_site_description", "lnbits_default_wallet_name", "lnbits_theme_options", "lnbits_custom_logo", "lnbits_ad_space_title", "lnbits_ad_space", "lnbits_ad_space_enabled", "lnbits_allowed_currencies", "lnbits_admin_extensions", "lnbits_extensions_manifests", "lnbits_admin_users", "lnbits_allowed_users", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lightning_invoice_expiry"]) -> typing.Union[MetaOapg.properties.lightning_invoice_expiry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boltz_network"]) -> typing.Union[MetaOapg.properties.boltz_network, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boltz_url"]) -> typing.Union[MetaOapg.properties.boltz_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boltz_mempool_space_url"]) -> typing.Union[MetaOapg.properties.boltz_mempool_space_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["boltz_mempool_space_url_ws"]) -> typing.Union[MetaOapg.properties.boltz_mempool_space_url_ws, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lntips_api_endpoint"]) -> typing.Union[MetaOapg.properties.lntips_api_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lntips_api_key"]) -> typing.Union[MetaOapg.properties.lntips_api_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lntips_admin_key"]) -> typing.Union[MetaOapg.properties.lntips_admin_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lntips_invoice_key"]) -> typing.Union[MetaOapg.properties.lntips_invoice_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["spark_url"]) -> typing.Union[MetaOapg.properties.spark_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["spark_token"]) -> typing.Union[MetaOapg.properties.spark_token, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opennode_api_endpoint"]) -> typing.Union[MetaOapg.properties.opennode_api_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opennode_key"]) -> typing.Union[MetaOapg.properties.opennode_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opennode_admin_key"]) -> typing.Union[MetaOapg.properties.opennode_admin_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["opennode_invoice_key"]) -> typing.Union[MetaOapg.properties.opennode_invoice_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnpay_api_endpoint"]) -> typing.Union[MetaOapg.properties.lnpay_api_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnpay_api_key"]) -> typing.Union[MetaOapg.properties.lnpay_api_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnpay_wallet_key"]) -> typing.Union[MetaOapg.properties.lnpay_wallet_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnpay_admin_key"]) -> typing.Union[MetaOapg.properties.lnpay_admin_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_endpoint"]) -> typing.Union[MetaOapg.properties.lnd_grpc_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_cert"]) -> typing.Union[MetaOapg.properties.lnd_grpc_cert, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_port"]) -> typing.Union[MetaOapg.properties.lnd_grpc_port, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_admin_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_grpc_admin_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_invoice_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_grpc_invoice_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_grpc_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_grpc_macaroon_encrypted"]) -> typing.Union[MetaOapg.properties.lnd_grpc_macaroon_encrypted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_endpoint"]) -> typing.Union[MetaOapg.properties.lnd_rest_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_cert"]) -> typing.Union[MetaOapg.properties.lnd_rest_cert, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_rest_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_macaroon_encrypted"]) -> typing.Union[MetaOapg.properties.lnd_rest_macaroon_encrypted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_cert"]) -> typing.Union[MetaOapg.properties.lnd_cert, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_admin_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_admin_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_invoice_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_invoice_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_admin_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_rest_admin_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnd_rest_invoice_macaroon"]) -> typing.Union[MetaOapg.properties.lnd_rest_invoice_macaroon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eclair_url"]) -> typing.Union[MetaOapg.properties.eclair_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eclair_pass"]) -> typing.Union[MetaOapg.properties.eclair_pass, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["corelightning_rpc"]) -> typing.Union[MetaOapg.properties.corelightning_rpc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["clightning_rpc"]) -> typing.Union[MetaOapg.properties.clightning_rpc, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cliche_endpoint"]) -> typing.Union[MetaOapg.properties.cliche_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_endpoint"]) -> typing.Union[MetaOapg.properties.lnbits_endpoint, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_key"]) -> typing.Union[MetaOapg.properties.lnbits_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_admin_key"]) -> typing.Union[MetaOapg.properties.lnbits_admin_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_invoice_key"]) -> typing.Union[MetaOapg.properties.lnbits_invoice_key, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fake_wallet_secret"]) -> typing.Union[MetaOapg.properties.fake_wallet_secret, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_backend_wallet_class"]) -> typing.Union[MetaOapg.properties.lnbits_backend_wallet_class, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_rate_limit_no"]) -> typing.Union[MetaOapg.properties.lnbits_rate_limit_no, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_rate_limit_unit"]) -> typing.Union[MetaOapg.properties.lnbits_rate_limit_unit, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_allowed_ips"]) -> typing.Union[MetaOapg.properties.lnbits_allowed_ips, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_blocked_ips"]) -> typing.Union[MetaOapg.properties.lnbits_blocked_ips, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_notifications"]) -> typing.Union[MetaOapg.properties.lnbits_notifications, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_killswitch"]) -> typing.Union[MetaOapg.properties.lnbits_killswitch, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_killswitch_interval"]) -> typing.Union[MetaOapg.properties.lnbits_killswitch_interval, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_watchdog"]) -> typing.Union[MetaOapg.properties.lnbits_watchdog, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_watchdog_interval"]) -> typing.Union[MetaOapg.properties.lnbits_watchdog_interval, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_watchdog_delta"]) -> typing.Union[MetaOapg.properties.lnbits_watchdog_delta, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_status_manifest"]) -> typing.Union[MetaOapg.properties.lnbits_status_manifest, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_baseurl"]) -> typing.Union[MetaOapg.properties.lnbits_baseurl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_reserve_fee_min"]) -> typing.Union[MetaOapg.properties.lnbits_reserve_fee_min, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_reserve_fee_percent"]) -> typing.Union[MetaOapg.properties.lnbits_reserve_fee_percent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_service_fee"]) -> typing.Union[MetaOapg.properties.lnbits_service_fee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_hide_api"]) -> typing.Union[MetaOapg.properties.lnbits_hide_api, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_denomination"]) -> typing.Union[MetaOapg.properties.lnbits_denomination, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_site_title"]) -> typing.Union[MetaOapg.properties.lnbits_site_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_site_tagline"]) -> typing.Union[MetaOapg.properties.lnbits_site_tagline, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_site_description"]) -> typing.Union[MetaOapg.properties.lnbits_site_description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_default_wallet_name"]) -> typing.Union[MetaOapg.properties.lnbits_default_wallet_name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_theme_options"]) -> typing.Union[MetaOapg.properties.lnbits_theme_options, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_custom_logo"]) -> typing.Union[MetaOapg.properties.lnbits_custom_logo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_ad_space_title"]) -> typing.Union[MetaOapg.properties.lnbits_ad_space_title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_ad_space"]) -> typing.Union[MetaOapg.properties.lnbits_ad_space, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_ad_space_enabled"]) -> typing.Union[MetaOapg.properties.lnbits_ad_space_enabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_allowed_currencies"]) -> typing.Union[MetaOapg.properties.lnbits_allowed_currencies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_admin_extensions"]) -> typing.Union[MetaOapg.properties.lnbits_admin_extensions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_extensions_manifests"]) -> typing.Union[MetaOapg.properties.lnbits_extensions_manifests, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_admin_users"]) -> typing.Union[MetaOapg.properties.lnbits_admin_users, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lnbits_allowed_users"]) -> typing.Union[MetaOapg.properties.lnbits_allowed_users, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["lightning_invoice_expiry", "boltz_network", "boltz_url", "boltz_mempool_space_url", "boltz_mempool_space_url_ws", "lntips_api_endpoint", "lntips_api_key", "lntips_admin_key", "lntips_invoice_key", "spark_url", "spark_token", "opennode_api_endpoint", "opennode_key", "opennode_admin_key", "opennode_invoice_key", "lnpay_api_endpoint", "lnpay_api_key", "lnpay_wallet_key", "lnpay_admin_key", "lnd_grpc_endpoint", "lnd_grpc_cert", "lnd_grpc_port", "lnd_grpc_admin_macaroon", "lnd_grpc_invoice_macaroon", "lnd_grpc_macaroon", "lnd_grpc_macaroon_encrypted", "lnd_rest_endpoint", "lnd_rest_cert", "lnd_rest_macaroon", "lnd_rest_macaroon_encrypted", "lnd_cert", "lnd_admin_macaroon", "lnd_invoice_macaroon", "lnd_rest_admin_macaroon", "lnd_rest_invoice_macaroon", "eclair_url", "eclair_pass", "corelightning_rpc", "clightning_rpc", "cliche_endpoint", "lnbits_endpoint", "lnbits_key", "lnbits_admin_key", "lnbits_invoice_key", "fake_wallet_secret", "lnbits_backend_wallet_class", "lnbits_rate_limit_no", "lnbits_rate_limit_unit", "lnbits_allowed_ips", "lnbits_blocked_ips", "lnbits_notifications", "lnbits_killswitch", "lnbits_killswitch_interval", "lnbits_watchdog", "lnbits_watchdog_interval", "lnbits_watchdog_delta", "lnbits_status_manifest", "lnbits_baseurl", "lnbits_reserve_fee_min", "lnbits_reserve_fee_percent", "lnbits_service_fee", "lnbits_hide_api", "lnbits_denomination", "lnbits_site_title", "lnbits_site_tagline", "lnbits_site_description", "lnbits_default_wallet_name", "lnbits_theme_options", "lnbits_custom_logo", "lnbits_ad_space_title", "lnbits_ad_space", "lnbits_ad_space_enabled", "lnbits_allowed_currencies", "lnbits_admin_extensions", "lnbits_extensions_manifests", "lnbits_admin_users", "lnbits_allowed_users", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        lightning_invoice_expiry: typing.Union[MetaOapg.properties.lightning_invoice_expiry, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        boltz_network: typing.Union[MetaOapg.properties.boltz_network, str, schemas.Unset] = schemas.unset,
        boltz_url: typing.Union[MetaOapg.properties.boltz_url, str, schemas.Unset] = schemas.unset,
        boltz_mempool_space_url: typing.Union[MetaOapg.properties.boltz_mempool_space_url, str, schemas.Unset] = schemas.unset,
        boltz_mempool_space_url_ws: typing.Union[MetaOapg.properties.boltz_mempool_space_url_ws, str, schemas.Unset] = schemas.unset,
        lntips_api_endpoint: typing.Union[MetaOapg.properties.lntips_api_endpoint, str, schemas.Unset] = schemas.unset,
        lntips_api_key: typing.Union[MetaOapg.properties.lntips_api_key, str, schemas.Unset] = schemas.unset,
        lntips_admin_key: typing.Union[MetaOapg.properties.lntips_admin_key, str, schemas.Unset] = schemas.unset,
        lntips_invoice_key: typing.Union[MetaOapg.properties.lntips_invoice_key, str, schemas.Unset] = schemas.unset,
        spark_url: typing.Union[MetaOapg.properties.spark_url, str, schemas.Unset] = schemas.unset,
        spark_token: typing.Union[MetaOapg.properties.spark_token, str, schemas.Unset] = schemas.unset,
        opennode_api_endpoint: typing.Union[MetaOapg.properties.opennode_api_endpoint, str, schemas.Unset] = schemas.unset,
        opennode_key: typing.Union[MetaOapg.properties.opennode_key, str, schemas.Unset] = schemas.unset,
        opennode_admin_key: typing.Union[MetaOapg.properties.opennode_admin_key, str, schemas.Unset] = schemas.unset,
        opennode_invoice_key: typing.Union[MetaOapg.properties.opennode_invoice_key, str, schemas.Unset] = schemas.unset,
        lnpay_api_endpoint: typing.Union[MetaOapg.properties.lnpay_api_endpoint, str, schemas.Unset] = schemas.unset,
        lnpay_api_key: typing.Union[MetaOapg.properties.lnpay_api_key, str, schemas.Unset] = schemas.unset,
        lnpay_wallet_key: typing.Union[MetaOapg.properties.lnpay_wallet_key, str, schemas.Unset] = schemas.unset,
        lnpay_admin_key: typing.Union[MetaOapg.properties.lnpay_admin_key, str, schemas.Unset] = schemas.unset,
        lnd_grpc_endpoint: typing.Union[MetaOapg.properties.lnd_grpc_endpoint, str, schemas.Unset] = schemas.unset,
        lnd_grpc_cert: typing.Union[MetaOapg.properties.lnd_grpc_cert, str, schemas.Unset] = schemas.unset,
        lnd_grpc_port: typing.Union[MetaOapg.properties.lnd_grpc_port, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnd_grpc_admin_macaroon: typing.Union[MetaOapg.properties.lnd_grpc_admin_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_grpc_invoice_macaroon: typing.Union[MetaOapg.properties.lnd_grpc_invoice_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_grpc_macaroon: typing.Union[MetaOapg.properties.lnd_grpc_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_grpc_macaroon_encrypted: typing.Union[MetaOapg.properties.lnd_grpc_macaroon_encrypted, str, schemas.Unset] = schemas.unset,
        lnd_rest_endpoint: typing.Union[MetaOapg.properties.lnd_rest_endpoint, str, schemas.Unset] = schemas.unset,
        lnd_rest_cert: typing.Union[MetaOapg.properties.lnd_rest_cert, str, schemas.Unset] = schemas.unset,
        lnd_rest_macaroon: typing.Union[MetaOapg.properties.lnd_rest_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_rest_macaroon_encrypted: typing.Union[MetaOapg.properties.lnd_rest_macaroon_encrypted, str, schemas.Unset] = schemas.unset,
        lnd_cert: typing.Union[MetaOapg.properties.lnd_cert, str, schemas.Unset] = schemas.unset,
        lnd_admin_macaroon: typing.Union[MetaOapg.properties.lnd_admin_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_invoice_macaroon: typing.Union[MetaOapg.properties.lnd_invoice_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_rest_admin_macaroon: typing.Union[MetaOapg.properties.lnd_rest_admin_macaroon, str, schemas.Unset] = schemas.unset,
        lnd_rest_invoice_macaroon: typing.Union[MetaOapg.properties.lnd_rest_invoice_macaroon, str, schemas.Unset] = schemas.unset,
        eclair_url: typing.Union[MetaOapg.properties.eclair_url, str, schemas.Unset] = schemas.unset,
        eclair_pass: typing.Union[MetaOapg.properties.eclair_pass, str, schemas.Unset] = schemas.unset,
        corelightning_rpc: typing.Union[MetaOapg.properties.corelightning_rpc, str, schemas.Unset] = schemas.unset,
        clightning_rpc: typing.Union[MetaOapg.properties.clightning_rpc, str, schemas.Unset] = schemas.unset,
        cliche_endpoint: typing.Union[MetaOapg.properties.cliche_endpoint, str, schemas.Unset] = schemas.unset,
        lnbits_endpoint: typing.Union[MetaOapg.properties.lnbits_endpoint, str, schemas.Unset] = schemas.unset,
        lnbits_key: typing.Union[MetaOapg.properties.lnbits_key, str, schemas.Unset] = schemas.unset,
        lnbits_admin_key: typing.Union[MetaOapg.properties.lnbits_admin_key, str, schemas.Unset] = schemas.unset,
        lnbits_invoice_key: typing.Union[MetaOapg.properties.lnbits_invoice_key, str, schemas.Unset] = schemas.unset,
        fake_wallet_secret: typing.Union[MetaOapg.properties.fake_wallet_secret, str, schemas.Unset] = schemas.unset,
        lnbits_backend_wallet_class: typing.Union[MetaOapg.properties.lnbits_backend_wallet_class, str, schemas.Unset] = schemas.unset,
        lnbits_rate_limit_no: typing.Union[MetaOapg.properties.lnbits_rate_limit_no, str, schemas.Unset] = schemas.unset,
        lnbits_rate_limit_unit: typing.Union[MetaOapg.properties.lnbits_rate_limit_unit, str, schemas.Unset] = schemas.unset,
        lnbits_allowed_ips: typing.Union[MetaOapg.properties.lnbits_allowed_ips, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_blocked_ips: typing.Union[MetaOapg.properties.lnbits_blocked_ips, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_notifications: typing.Union[MetaOapg.properties.lnbits_notifications, bool, schemas.Unset] = schemas.unset,
        lnbits_killswitch: typing.Union[MetaOapg.properties.lnbits_killswitch, bool, schemas.Unset] = schemas.unset,
        lnbits_killswitch_interval: typing.Union[MetaOapg.properties.lnbits_killswitch_interval, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnbits_watchdog: typing.Union[MetaOapg.properties.lnbits_watchdog, bool, schemas.Unset] = schemas.unset,
        lnbits_watchdog_interval: typing.Union[MetaOapg.properties.lnbits_watchdog_interval, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnbits_watchdog_delta: typing.Union[MetaOapg.properties.lnbits_watchdog_delta, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnbits_status_manifest: typing.Union[MetaOapg.properties.lnbits_status_manifest, str, schemas.Unset] = schemas.unset,
        lnbits_baseurl: typing.Union[MetaOapg.properties.lnbits_baseurl, str, schemas.Unset] = schemas.unset,
        lnbits_reserve_fee_min: typing.Union[MetaOapg.properties.lnbits_reserve_fee_min, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lnbits_reserve_fee_percent: typing.Union[MetaOapg.properties.lnbits_reserve_fee_percent, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lnbits_service_fee: typing.Union[MetaOapg.properties.lnbits_service_fee, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        lnbits_hide_api: typing.Union[MetaOapg.properties.lnbits_hide_api, bool, schemas.Unset] = schemas.unset,
        lnbits_denomination: typing.Union[MetaOapg.properties.lnbits_denomination, str, schemas.Unset] = schemas.unset,
        lnbits_site_title: typing.Union[MetaOapg.properties.lnbits_site_title, str, schemas.Unset] = schemas.unset,
        lnbits_site_tagline: typing.Union[MetaOapg.properties.lnbits_site_tagline, str, schemas.Unset] = schemas.unset,
        lnbits_site_description: typing.Union[MetaOapg.properties.lnbits_site_description, str, schemas.Unset] = schemas.unset,
        lnbits_default_wallet_name: typing.Union[MetaOapg.properties.lnbits_default_wallet_name, str, schemas.Unset] = schemas.unset,
        lnbits_theme_options: typing.Union[MetaOapg.properties.lnbits_theme_options, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_custom_logo: typing.Union[MetaOapg.properties.lnbits_custom_logo, str, schemas.Unset] = schemas.unset,
        lnbits_ad_space_title: typing.Union[MetaOapg.properties.lnbits_ad_space_title, str, schemas.Unset] = schemas.unset,
        lnbits_ad_space: typing.Union[MetaOapg.properties.lnbits_ad_space, str, schemas.Unset] = schemas.unset,
        lnbits_ad_space_enabled: typing.Union[MetaOapg.properties.lnbits_ad_space_enabled, bool, schemas.Unset] = schemas.unset,
        lnbits_allowed_currencies: typing.Union[MetaOapg.properties.lnbits_allowed_currencies, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_admin_extensions: typing.Union[MetaOapg.properties.lnbits_admin_extensions, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_extensions_manifests: typing.Union[MetaOapg.properties.lnbits_extensions_manifests, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_admin_users: typing.Union[MetaOapg.properties.lnbits_admin_users, list, tuple, schemas.Unset] = schemas.unset,
        lnbits_allowed_users: typing.Union[MetaOapg.properties.lnbits_allowed_users, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EditableSettings':
        return super().__new__(
            cls,
            *_args,
            lightning_invoice_expiry=lightning_invoice_expiry,
            boltz_network=boltz_network,
            boltz_url=boltz_url,
            boltz_mempool_space_url=boltz_mempool_space_url,
            boltz_mempool_space_url_ws=boltz_mempool_space_url_ws,
            lntips_api_endpoint=lntips_api_endpoint,
            lntips_api_key=lntips_api_key,
            lntips_admin_key=lntips_admin_key,
            lntips_invoice_key=lntips_invoice_key,
            spark_url=spark_url,
            spark_token=spark_token,
            opennode_api_endpoint=opennode_api_endpoint,
            opennode_key=opennode_key,
            opennode_admin_key=opennode_admin_key,
            opennode_invoice_key=opennode_invoice_key,
            lnpay_api_endpoint=lnpay_api_endpoint,
            lnpay_api_key=lnpay_api_key,
            lnpay_wallet_key=lnpay_wallet_key,
            lnpay_admin_key=lnpay_admin_key,
            lnd_grpc_endpoint=lnd_grpc_endpoint,
            lnd_grpc_cert=lnd_grpc_cert,
            lnd_grpc_port=lnd_grpc_port,
            lnd_grpc_admin_macaroon=lnd_grpc_admin_macaroon,
            lnd_grpc_invoice_macaroon=lnd_grpc_invoice_macaroon,
            lnd_grpc_macaroon=lnd_grpc_macaroon,
            lnd_grpc_macaroon_encrypted=lnd_grpc_macaroon_encrypted,
            lnd_rest_endpoint=lnd_rest_endpoint,
            lnd_rest_cert=lnd_rest_cert,
            lnd_rest_macaroon=lnd_rest_macaroon,
            lnd_rest_macaroon_encrypted=lnd_rest_macaroon_encrypted,
            lnd_cert=lnd_cert,
            lnd_admin_macaroon=lnd_admin_macaroon,
            lnd_invoice_macaroon=lnd_invoice_macaroon,
            lnd_rest_admin_macaroon=lnd_rest_admin_macaroon,
            lnd_rest_invoice_macaroon=lnd_rest_invoice_macaroon,
            eclair_url=eclair_url,
            eclair_pass=eclair_pass,
            corelightning_rpc=corelightning_rpc,
            clightning_rpc=clightning_rpc,
            cliche_endpoint=cliche_endpoint,
            lnbits_endpoint=lnbits_endpoint,
            lnbits_key=lnbits_key,
            lnbits_admin_key=lnbits_admin_key,
            lnbits_invoice_key=lnbits_invoice_key,
            fake_wallet_secret=fake_wallet_secret,
            lnbits_backend_wallet_class=lnbits_backend_wallet_class,
            lnbits_rate_limit_no=lnbits_rate_limit_no,
            lnbits_rate_limit_unit=lnbits_rate_limit_unit,
            lnbits_allowed_ips=lnbits_allowed_ips,
            lnbits_blocked_ips=lnbits_blocked_ips,
            lnbits_notifications=lnbits_notifications,
            lnbits_killswitch=lnbits_killswitch,
            lnbits_killswitch_interval=lnbits_killswitch_interval,
            lnbits_watchdog=lnbits_watchdog,
            lnbits_watchdog_interval=lnbits_watchdog_interval,
            lnbits_watchdog_delta=lnbits_watchdog_delta,
            lnbits_status_manifest=lnbits_status_manifest,
            lnbits_baseurl=lnbits_baseurl,
            lnbits_reserve_fee_min=lnbits_reserve_fee_min,
            lnbits_reserve_fee_percent=lnbits_reserve_fee_percent,
            lnbits_service_fee=lnbits_service_fee,
            lnbits_hide_api=lnbits_hide_api,
            lnbits_denomination=lnbits_denomination,
            lnbits_site_title=lnbits_site_title,
            lnbits_site_tagline=lnbits_site_tagline,
            lnbits_site_description=lnbits_site_description,
            lnbits_default_wallet_name=lnbits_default_wallet_name,
            lnbits_theme_options=lnbits_theme_options,
            lnbits_custom_logo=lnbits_custom_logo,
            lnbits_ad_space_title=lnbits_ad_space_title,
            lnbits_ad_space=lnbits_ad_space,
            lnbits_ad_space_enabled=lnbits_ad_space_enabled,
            lnbits_allowed_currencies=lnbits_allowed_currencies,
            lnbits_admin_extensions=lnbits_admin_extensions,
            lnbits_extensions_manifests=lnbits_extensions_manifests,
            lnbits_admin_users=lnbits_admin_users,
            lnbits_allowed_users=lnbits_allowed_users,
            _configuration=_configuration,
            **kwargs,
        )
